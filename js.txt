const express = require('express');
const { MongoClient } = require('mongodb');
const path = require('path');

const app = express();
const PORT = 3000;

// MongoDB connection
const uri = 'mongodb://localhost:27017';
const client = new MongoClient(uri);
let db;

app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

app.post('/add-item', async (req, res) => {
    try {
        const { itemCode, itemName, category, qty, rate, location } = req.body;
        
        if (!itemCode || !itemName || !category || !qty || !rate || !location) {
            return res.status(400).json({ message: 'All fields are required.' });
        }

        const price = qty * rate;
        let discountPercent = 0;

        if (category === 'Fruits') discountPercent = 5;
        else if (category === 'Vegetables') discountPercent = 10;
        else if (category === 'Stationary') discountPercent = 3;

        const discount = (price * discountPercent) / 100;
        const amount = price - discount;

        const item = {
            itemCode,
            itemName,
            category,
            qty,
            rate,
            price,
            discount,
            amount,
            location,
        };

        await db.collection('items').insertOne(item);
        res.status(201).json(item);
    } catch (error) {
        console.error(error);
        res.status(500).json({ message: 'Internal server error.' });
    }
});

app.get('/items', async (req, res) => {
    try {
        const items = await db.collection('items').find().toArray();
        res.json(items);
    } catch (error) {
        console.error(error);
        res.status(500).json({ message: 'Internal server error.' });
    }
});

// Start server and connect to MongoDB
(async () => {
    try {
        await client.connect();
        db = client.db('farmFresh');
        app.listen(PORT, () => {
            console.log(`Server running at http://localhost:${PORT}`);
        });
    } catch (error) {
        console.error('Error connecting to MongoDB:', error);
    }
})();
